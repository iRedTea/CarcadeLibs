
plugins {
    id("com.github.johnrengelman.shadow") version "7.1.2"
    id("java")
    id("maven-publish")
}

group = 'me.redtea'
version = '1.1.1'

repositories {
    mavenCentral()
    maven {
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'

        // As of Gradle 5.1, you can limit this to only those
        // dependencies you expect from it
        content {
            includeGroup 'org.bukkit'
            includeGroup 'org.spigotmc'
        }
    }
    maven { url = 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven { url = 'https://oss.sonatype.org/content/repositories/central' }
}

dependencies {
    compileOnly 'org.spigotmc:spigot-api:1.16.5-R0.1-SNAPSHOT' // The Spigot API with no shadowing. Requires the OSS repo.

    implementation 'com.google.inject:guice:5.1.0'
    implementation 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    implementation 'me.mattstudios.utils:matt-framework:1.4.6'
    implementation 'dev.triumphteam:triumph-gui:3.1.2'
    implementation group: 'com.github.cryptomorin', name: 'XSeries', version: '8.6.1'
    implementation 'org.xerial:sqlite-jdbc:3.36.0.3'
    implementation group: 'mysql', name: 'mysql-connector-java', version: '5.1.6'
}



def targetJavaVersion = 8
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}



publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            groupId = 'com.github.itzRedTea'
            artifactId = 'me.redtea.carcadelibs'
            version = this.version

        }
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

shadowJar {
    //Storage based relocations
    relocate("com.google.inject", "${project.group}.libs.inject")
    relocate("org.projectlombok:lombok:1.18.24", "${project.group}.libs.lombok")
    relocate("me.mattstudios.utils", "${project.group}.libs.commands")
    relocate("dev.triumphteam.gui", "${project.group}.libs.gui")
    relocate("com.github.cryptomorin", "${project.group}.libs.xseries")
    relocate("org.xerial:sqlite-jdbc:3.36.0.3", "${project.group}.libs.sqlite")
    relocate("mysql", "${project.group}.libs.mysql")
}
artifacts {
    archives(shadowJar)
}

